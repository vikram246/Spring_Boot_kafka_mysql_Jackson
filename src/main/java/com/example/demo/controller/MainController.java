package com.example.demo.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.example.demo.model.SFDC;
//import com.example.demo.model.User;
import com.example.demo.model.student;
import com.example.demo.repo.SFDCRepository;
import com.example.demo.repo.StudentRepo;
//import com.example.demo.repo.UserRepository;

@Controller // This means that this class is a Controller
@RequestMapping(path = "/demo") // This means URL's start with /demo (after Application path)
public class MainController {
	@Autowired // This means to get the bean called userRepository
				// Which is auto-generated by Spring, we will use it to handle the data
	private SFDCRepository sfdcRepository;

	@Autowired
	private StudentRepo studentRepo;

	@GetMapping(path = "/add") // Map ONLY GET Requests
	public @ResponseBody String addNewUser(@RequestParam String Account, @RequestParam String Contact,
			@RequestParam String Address) {
		// @ResponseBody means the returned String is the response, not a view name
		// @RequestParam means it is a parameter from the GET or POST request

		SFDC n = new SFDC();
		n.setAccount(Account);
		n.setContact(Contact);
		n.setAddress(Address);
		sfdcRepository.save(n);
		return "Saved";
	}

	@GetMapping(path = "/all")
	public @ResponseBody Iterable<SFDC> getAllUsers() {
		// This returns a JSON or XML with the users
		return sfdcRepository.findAll();
	}

	@GetMapping(path = "/std/all")
	public @ResponseBody Iterable<student> getAllStsudents() {
		// This returns a JSON or XML with the users
		return studentRepo.findAll();

	}
}
